{"remainingRequest":"/Users/admin/Desktop/template-vue/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/admin/Desktop/template-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/admin/Desktop/template-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/Desktop/template-vue/src/views/forms/FormValidation.vue?vue&type=template&id=b6eec212&","dependencies":[{"path":"/Users/admin/Desktop/template-vue/src/views/forms/FormValidation.vue","mtime":1535529988000},{"path":"/Users/admin/Desktop/template-vue/node_modules/cache-loader/dist/cjs.js","mtime":1544032770804},{"path":"/Users/admin/Desktop/template-vue/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/admin/Desktop/template-vue/node_modules/cache-loader/dist/cjs.js","mtime":1544032770804},{"path":"/Users/admin/Desktop/template-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\"page-title-bar\"),\n      _c(\n        \"v-container\",\n        { attrs: { fluid: \"\", \"grid-list-xl\": \"\", \"py-0\": \"\" } },\n        [\n          _c(\n            \"app-card\",\n            {\n              attrs: {\n                heading: _vm.$t(\"message.basicValidation\"),\n                customClasses: \"mb-30\"\n              }\n            },\n            [\n              _c(\n                \"v-form\",\n                {\n                  model: {\n                    value: _vm.form1.valid,\n                    callback: function($$v) {\n                      _vm.$set(_vm.form1, \"valid\", $$v)\n                    },\n                    expression: \"form1.valid\"\n                  }\n                },\n                [\n                  _c(\"v-text-field\", {\n                    attrs: {\n                      label: \"Name\",\n                      rules: _vm.form1.nameRules,\n                      counter: 10,\n                      required: \"\"\n                    },\n                    model: {\n                      value: _vm.form1.name,\n                      callback: function($$v) {\n                        _vm.$set(_vm.form1, \"name\", $$v)\n                      },\n                      expression: \"form1.name\"\n                    }\n                  }),\n                  _c(\"v-text-field\", {\n                    attrs: {\n                      label: \"E-mail\",\n                      rules: _vm.form1.emailRules,\n                      required: \"\"\n                    },\n                    model: {\n                      value: _vm.form1.email,\n                      callback: function($$v) {\n                        _vm.$set(_vm.form1, \"email\", $$v)\n                      },\n                      expression: \"form1.email\"\n                    }\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _c(\n            \"app-card\",\n            {\n              attrs: {\n                heading: _vm.$t(\"message.validationWithSubmitAndclear\"),\n                customClasses: \"mb-30\"\n              }\n            },\n            [\n              _c(\n                \"v-form\",\n                {\n                  ref: \"form\",\n                  attrs: { \"lazy-validation\": \"\" },\n                  model: {\n                    value: _vm.form2.valid,\n                    callback: function($$v) {\n                      _vm.$set(_vm.form2, \"valid\", $$v)\n                    },\n                    expression: \"form2.valid\"\n                  }\n                },\n                [\n                  _c(\"v-text-field\", {\n                    attrs: {\n                      label: \"Name\",\n                      rules: _vm.form2.nameRules,\n                      counter: 10,\n                      required: \"\"\n                    },\n                    model: {\n                      value: _vm.form2.name,\n                      callback: function($$v) {\n                        _vm.$set(_vm.form2, \"name\", $$v)\n                      },\n                      expression: \"form2.name\"\n                    }\n                  }),\n                  _c(\"v-text-field\", {\n                    attrs: {\n                      label: \"E-mail\",\n                      rules: _vm.form2.emailRules,\n                      required: \"\"\n                    },\n                    model: {\n                      value: _vm.form2.email,\n                      callback: function($$v) {\n                        _vm.$set(_vm.form2, \"email\", $$v)\n                      },\n                      expression: \"form2.email\"\n                    }\n                  }),\n                  _c(\"v-select\", {\n                    attrs: {\n                      label: \"Item\",\n                      items: _vm.form2.items,\n                      rules: [\n                        function(v) {\n                          return !!v || \"Item is required\"\n                        }\n                      ],\n                      required: \"\"\n                    },\n                    model: {\n                      value: _vm.form2.select,\n                      callback: function($$v) {\n                        _vm.$set(_vm.form2, \"select\", $$v)\n                      },\n                      expression: \"form2.select\"\n                    }\n                  }),\n                  _c(\"v-checkbox\", {\n                    attrs: {\n                      label: \"Do you agree?\",\n                      rules: [\n                        function(v) {\n                          return !!v || \"You must agree to continue!\"\n                        }\n                      ],\n                      required: \"\"\n                    },\n                    model: {\n                      value: _vm.form2.checkbox,\n                      callback: function($$v) {\n                        _vm.$set(_vm.form2, \"checkbox\", $$v)\n                      },\n                      expression: \"form2.checkbox\"\n                    }\n                  }),\n                  _c(\n                    \"v-btn\",\n                    {\n                      attrs: { disabled: !_vm.form2.valid, color: \"success\" },\n                      on: { click: _vm.submit }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n\\t\\t\\t\\t\\t\" +\n                          _vm._s(_vm.$t(\"message.submit\")) +\n                          \"\\n\\t\\t\\t\\t\"\n                      )\n                    ]\n                  ),\n                  _c(\n                    \"v-btn\",\n                    { attrs: { color: \"primary\" }, on: { click: _vm.clear } },\n                    [_vm._v(_vm._s(_vm.$t(\"message.clear\")))]\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}