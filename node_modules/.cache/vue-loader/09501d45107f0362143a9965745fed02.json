{"remainingRequest":"/Users/admin/Desktop/template-vue/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/admin/Desktop/template-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/admin/Desktop/template-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/Desktop/template-vue/src/views/tables/SearchWithText.vue?vue&type=template&id=4e9a01bb&","dependencies":[{"path":"/Users/admin/Desktop/template-vue/src/views/tables/SearchWithText.vue","mtime":1537373832000},{"path":"/Users/admin/Desktop/template-vue/node_modules/cache-loader/dist/cjs.js","mtime":1544032770804},{"path":"/Users/admin/Desktop/template-vue/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/admin/Desktop/template-vue/node_modules/cache-loader/dist/cjs.js","mtime":1544032770804},{"path":"/Users/admin/Desktop/template-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\"page-title-bar\"),\n      _c(\"app-section-loader\", { attrs: { status: _vm.loader } }),\n      _c(\n        \"v-container\",\n        { attrs: { fluid: \"\", \"grid-list-xl\": \"\", \"py-0\": \"\" } },\n        [\n          _c(\n            \"v-layout\",\n            { attrs: { row: \"\", wrap: \"\" } },\n            [\n              _c(\n                \"app-card\",\n                {\n                  attrs: {\n                    heading: _vm.$t(\"message.searchRow\"),\n                    fullBlock: true,\n                    colClasses: \"xl12 lg12 md12 sm12 xs12\"\n                  }\n                },\n                [\n                  _c(\n                    \"v-card-title\",\n                    [\n                      _vm._v(\"Nutrition\\n\\t\\t\\t\\t\\t\\t\"),\n                      _c(\"v-spacer\"),\n                      _c(\"v-text-field\", {\n                        attrs: {\n                          \"append-icon\": \"search\",\n                          label: \"Search\",\n                          \"single-line\": \"\",\n                          \"hide-details\": \"\"\n                        },\n                        model: {\n                          value: _vm.search,\n                          callback: function($$v) {\n                            _vm.search = $$v\n                          },\n                          expression: \"search\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _c(\"v-data-table\", {\n                    attrs: {\n                      headers: _vm.headers,\n                      items: _vm.items,\n                      search: _vm.search\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"items\",\n                        fn: function(props) {\n                          return [\n                            _c(\n                              \"td\",\n                              [\n                                _c(\n                                  \"v-edit-dialog\",\n                                  { attrs: { lazy: \"\" } },\n                                  [\n                                    _vm._v(\n                                      \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\" +\n                                        _vm._s(props.item.name) +\n                                        \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\"\n                                    ),\n                                    _c(\"v-text-field\", {\n                                      attrs: {\n                                        slot: \"input\",\n                                        label: \"Edit\",\n                                        \"single-line\": \"\",\n                                        counter: \"\",\n                                        rules: [_vm.max25chars]\n                                      },\n                                      slot: \"input\",\n                                      model: {\n                                        value: props.item.name,\n                                        callback: function($$v) {\n                                          _vm.$set(props.item, \"name\", $$v)\n                                        },\n                                        expression: \"props.item.name\"\n                                      }\n                                    })\n                                  ],\n                                  1\n                                )\n                              ],\n                              1\n                            ),\n                            _c(\"td\", [_vm._v(_vm._s(props.item.calories))]),\n                            _c(\"td\", [_vm._v(_vm._s(props.item.fat))]),\n                            _c(\"td\", [_vm._v(_vm._s(props.item.carbs))]),\n                            _c(\"td\", [_vm._v(_vm._s(props.item.protein))]),\n                            _c(\"td\", [_vm._v(_vm._s(props.item.sodium))]),\n                            _c(\"td\", [_vm._v(_vm._s(props.item.calcium))]),\n                            _c(\n                              \"td\",\n                              [\n                                _c(\n                                  \"v-edit-dialog\",\n                                  {\n                                    attrs: { large: \"\", lazy: \"\" },\n                                    on: {\n                                      open: function($event) {\n                                        _vm.tmp = props.item.iron\n                                      },\n                                      save: function($event) {\n                                        props.item.iron =\n                                          _vm.tmp || props.item.iron\n                                      }\n                                    }\n                                  },\n                                  [\n                                    _c(\"div\", [\n                                      _vm._v(_vm._s(props.item.iron))\n                                    ]),\n                                    _c(\n                                      \"div\",\n                                      {\n                                        staticClass: \"mt-3 title\",\n                                        attrs: { slot: \"input\" },\n                                        slot: \"input\"\n                                      },\n                                      [_vm._v(\"Update Iron\")]\n                                    ),\n                                    _c(\"v-text-field\", {\n                                      attrs: {\n                                        slot: \"input\",\n                                        label: \"Edit\",\n                                        \"single-line\": \"\",\n                                        counter: \"\",\n                                        autofocus: \"\",\n                                        rules: [_vm.max25chars]\n                                      },\n                                      slot: \"input\",\n                                      model: {\n                                        value: _vm.tmp,\n                                        callback: function($$v) {\n                                          _vm.tmp = $$v\n                                        },\n                                        expression: \"tmp\"\n                                      }\n                                    })\n                                  ],\n                                  1\n                                )\n                              ],\n                              1\n                            )\n                          ]\n                        }\n                      },\n                      {\n                        key: \"pageText\",\n                        fn: function(ref) {\n                          var pageStart = ref.pageStart\n                          var pageStop = ref.pageStop\n                          return [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\\t\\tFrom \" +\n                                _vm._s(pageStart) +\n                                \" to \" +\n                                _vm._s(pageStop) +\n                                \"\\n\\t\\t\\t\\t\\t\\t\"\n                            )\n                          ]\n                        }\n                      }\n                    ])\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}