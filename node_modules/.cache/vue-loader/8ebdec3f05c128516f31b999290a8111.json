{"remainingRequest":"/Users/admin/Desktop/template-vue/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/admin/Desktop/template-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/admin/Desktop/template-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/Desktop/template-vue/src/views/ui-elements/Snackbar.vue?vue&type=template&id=0ee82d5e&","dependencies":[{"path":"/Users/admin/Desktop/template-vue/src/views/ui-elements/Snackbar.vue","mtime":1535529988000},{"path":"/Users/admin/Desktop/template-vue/node_modules/cache-loader/dist/cjs.js","mtime":1544032770804},{"path":"/Users/admin/Desktop/template-vue/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/admin/Desktop/template-vue/node_modules/cache-loader/dist/cjs.js","mtime":1544032770804},{"path":"/Users/admin/Desktop/template-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\"page-title-bar\"),\n      _c(\n        \"v-container\",\n        { attrs: { fluid: \"\", \"grid-list-xl\": \"\", \"pt-0\": \"\" } },\n        [\n          _c(\n            \"app-card\",\n            { attrs: { heading: _vm.$t(\"message.snackbar\") } },\n            [\n              _c(\"div\", { staticClass: \"mb-3\" }, [\n                _c(\"p\", [\n                  _vm._v(\n                    \"The standard snackbar is useful for calling attention to some function that has just happened.\"\n                  )\n                ])\n              ]),\n              _c(\n                \"v-layout\",\n                { attrs: { row: \"\", wrap: \"\" } },\n                [\n                  _c(\"v-flex\", { attrs: { xs12: \"\", md6: \"\" } }, [\n                    _c(\"ul\", { staticClass: \"list-unstyled\" }, [\n                      _c(\n                        \"li\",\n                        [\n                          _c(\"v-checkbox\", {\n                            attrs: {\n                              color: \"primary\",\n                              value: \"left\",\n                              label: \"Left\"\n                            },\n                            model: {\n                              value: _vm.x,\n                              callback: function($$v) {\n                                _vm.x = $$v\n                              },\n                              expression: \"x\"\n                            }\n                          })\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"li\",\n                        [\n                          _c(\"v-checkbox\", {\n                            attrs: {\n                              color: \"primary\",\n                              value: \"right\",\n                              label: \"Right\"\n                            },\n                            model: {\n                              value: _vm.x,\n                              callback: function($$v) {\n                                _vm.x = $$v\n                              },\n                              expression: \"x\"\n                            }\n                          })\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"li\",\n                        [\n                          _c(\"v-checkbox\", {\n                            attrs: {\n                              color: \"primary\",\n                              value: \"top\",\n                              label: \"Top\"\n                            },\n                            model: {\n                              value: _vm.y,\n                              callback: function($$v) {\n                                _vm.y = $$v\n                              },\n                              expression: \"y\"\n                            }\n                          })\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"li\",\n                        [\n                          _c(\"v-checkbox\", {\n                            attrs: {\n                              color: \"primary\",\n                              value: \"bottom\",\n                              label: \"Bottom\"\n                            },\n                            model: {\n                              value: _vm.y,\n                              callback: function($$v) {\n                                _vm.y = $$v\n                              },\n                              expression: \"y\"\n                            }\n                          })\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"li\",\n                        [\n                          _c(\"v-checkbox\", {\n                            attrs: {\n                              color: \"primary\",\n                              value: \"multi-line\",\n                              label: \"Multi-line (mobile)\"\n                            },\n                            model: {\n                              value: _vm.mode,\n                              callback: function($$v) {\n                                _vm.mode = $$v\n                              },\n                              expression: \"mode\"\n                            }\n                          })\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"li\",\n                        [\n                          _c(\"v-checkbox\", {\n                            attrs: {\n                              color: \"primary\",\n                              value: \"vertical\",\n                              label: \"Vertical (mobile)\"\n                            },\n                            model: {\n                              value: _vm.mode,\n                              callback: function($$v) {\n                                _vm.mode = $$v\n                              },\n                              expression: \"mode\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ])\n                  ]),\n                  _c(\n                    \"v-flex\",\n                    { attrs: { xs12: \"\", md6: \"\" } },\n                    [\n                      _c(\"v-text-field\", {\n                        attrs: { type: \"text\", label: \"Text\" },\n                        model: {\n                          value: _vm.text,\n                          callback: function($$v) {\n                            _vm.text = $$v\n                          },\n                          expression: \"text\"\n                        }\n                      }),\n                      _c(\"v-text-field\", {\n                        attrs: { type: \"number\", label: \"Timeout\" },\n                        model: {\n                          value: _vm.timeout,\n                          callback: function($$v) {\n                            _vm.timeout = _vm._n($$v)\n                          },\n                          expression: \"timeout\"\n                        }\n                      }),\n                      _c(\n                        \"v-btn\",\n                        {\n                          attrs: { block: \"\", color: \"primary\", large: \"\" },\n                          nativeOn: {\n                            click: function($event) {\n                              _vm.snackbar = true\n                            }\n                          }\n                        },\n                        [_vm._v(_vm._s(_vm.$t(\"message.showSnackbar\")))]\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"v-snackbar\",\n                {\n                  attrs: {\n                    timeout: _vm.timeout,\n                    top: _vm.y === \"top\",\n                    bottom: _vm.y === \"bottom\",\n                    right: _vm.x === \"right\",\n                    left: _vm.x === \"left\",\n                    \"multi-line\": _vm.mode === \"multi-line\",\n                    vertical: _vm.mode === \"vertical\"\n                  },\n                  model: {\n                    value: _vm.snackbar,\n                    callback: function($$v) {\n                      _vm.snackbar = $$v\n                    },\n                    expression: \"snackbar\"\n                  }\n                },\n                [\n                  _c(\"p\", { staticClass: \"ma-0\" }, [_vm._v(_vm._s(_vm.text))]),\n                  _c(\n                    \"v-btn\",\n                    {\n                      attrs: { color: \"error\" },\n                      nativeOn: {\n                        click: function($event) {\n                          _vm.snackbar = false\n                        }\n                      }\n                    },\n                    [_vm._v(_vm._s(_vm.$t(\"message.close\")))]\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _c(\n            \"app-card\",\n            { attrs: { heading: _vm.$t(\"message.contextualSnackbar\") } },\n            [\n              _c(\"div\", { staticClass: \"mb-3\" }, [\n                _c(\"p\", { staticClass: \"mb-0\" }, [\n                  _vm._v(\n                    \"You can also apply a color to the snackbar to better fit your implementation.\"\n                  )\n                ])\n              ]),\n              _c(\n                \"v-layout\",\n                { attrs: { row: \"\", wrap: \"\" } },\n                [\n                  _c(\n                    \"v-flex\",\n                    { attrs: { xs12: \"\", md6: \"\" } },\n                    [\n                      _c(\n                        \"v-radio-group\",\n                        {\n                          attrs: { row: \"\" },\n                          model: {\n                            value: _vm.color,\n                            callback: function($$v) {\n                              _vm.color = $$v\n                            },\n                            expression: \"color\"\n                          }\n                        },\n                        _vm._l(\n                          [\"success\", \"info\", \"error\", \"cyan darken-2\"],\n                          function(colorValue, i) {\n                            return _c(\"v-radio\", {\n                              key: i,\n                              attrs: {\n                                light: \"\",\n                                value: colorValue,\n                                label: colorValue,\n                                color: colorValue\n                              }\n                            })\n                          }\n                        )\n                      ),\n                      _c(\"v-checkbox\", {\n                        attrs: {\n                          color: \"primary\",\n                          value: \"multi-line\",\n                          label: \"Multi-line (mobile)\"\n                        },\n                        model: {\n                          value: _vm.mode2,\n                          callback: function($$v) {\n                            _vm.mode2 = $$v\n                          },\n                          expression: \"mode2\"\n                        }\n                      }),\n                      _c(\"v-checkbox\", {\n                        attrs: {\n                          color: \"primary\",\n                          value: \"vertical\",\n                          label: \"Vertical (mobile)\"\n                        },\n                        model: {\n                          value: _vm.mode2,\n                          callback: function($$v) {\n                            _vm.mode2 = $$v\n                          },\n                          expression: \"mode2\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"v-flex\",\n                    { attrs: { xs12: \"\", md6: \"\" } },\n                    [\n                      _c(\"v-text-field\", {\n                        attrs: { type: \"text\", label: \"Text\" },\n                        model: {\n                          value: _vm.text,\n                          callback: function($$v) {\n                            _vm.text = $$v\n                          },\n                          expression: \"text\"\n                        }\n                      }),\n                      _c(\"v-text-field\", {\n                        attrs: { type: \"number\", label: \"Timeout\" },\n                        model: {\n                          value: _vm.timeout,\n                          callback: function($$v) {\n                            _vm.timeout = _vm._n($$v)\n                          },\n                          expression: \"timeout\"\n                        }\n                      }),\n                      _c(\n                        \"v-btn\",\n                        {\n                          attrs: {\n                            block: \"\",\n                            large: \"\",\n                            color: \"warning\",\n                            dark: \"\"\n                          },\n                          nativeOn: {\n                            click: function($event) {\n                              _vm.snackbar2 = true\n                            }\n                          }\n                        },\n                        [_vm._v(_vm._s(_vm.$t(\"message.showSnackbar\")))]\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"v-snackbar\",\n                {\n                  attrs: {\n                    timeout: _vm.timeout,\n                    color: _vm.color,\n                    \"multi-line\": _vm.mode2 === \"multi-line\",\n                    vertical: _vm.mode2 === \"vertical\"\n                  },\n                  model: {\n                    value: _vm.snackbar2,\n                    callback: function($$v) {\n                      _vm.snackbar2 = $$v\n                    },\n                    expression: \"snackbar2\"\n                  }\n                },\n                [\n                  _vm._v(\"\\n\\t\\t\\t\\t\" + _vm._s(_vm.text) + \"\\n\\t\\t\\t\\t\"),\n                  _c(\n                    \"v-btn\",\n                    {\n                      attrs: { color: \"error\" },\n                      nativeOn: {\n                        click: function($event) {\n                          _vm.snackbar2 = false\n                        }\n                      }\n                    },\n                    [_vm._v(_vm._s(_vm.$t(\"message.close\")))]\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}