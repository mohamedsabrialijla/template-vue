{"remainingRequest":"/Users/admin/Desktop/template-vue/node_modules/babel-loader/lib/index.js!/Users/admin/Desktop/template-vue/src/store/modules/chat/index.js","dependencies":[{"path":"/Users/admin/Desktop/template-vue/src/store/modules/chat/index.js","mtime":1535529988000},{"path":"/Users/admin/Desktop/template-vue/node_modules/cache-loader/dist/cjs.js","mtime":1544032770804},{"path":"/Users/admin/Desktop/template-vue/node_modules/babel-loader/lib/index.js","mtime":1529635966000}],"contextDependencies":[],"result":["/**\n * Auth Module\n */\nimport { users } from './data';\nvar state = {\n  users: null,\n  loadingChatModule: false,\n  selectedUser: null,\n  loadingChat: false,\n  chatSidebar: false // getters\n\n};\nvar getters = {\n  loadingChatModule: function loadingChatModule(state) {\n    return state.loadingChatModule;\n  },\n  users: function users(state) {\n    return state.users;\n  },\n  selectedUser: function selectedUser(state) {\n    return state.selectedUser;\n  },\n  loadingChat: function loadingChat(state) {\n    return state.loadingChat;\n  },\n  chatSidebar: function chatSidebar(state) {\n    return state.chatSidebar;\n  } // actions\n\n};\nvar actions = {\n  getUsers: function getUsers(context) {\n    context.commit('getUsers');\n    setTimeout(function () {\n      context.commit('getUserSuccess');\n    }, 2000);\n  },\n  openChat: function openChat(context, payload) {\n    context.commit('loadChat', payload);\n    setTimeout(function () {\n      context.commit('loadChatSuccess');\n    }, 2000);\n  },\n  sendMessage: function sendMessage(context, payload) {\n    var message = {\n      id: new Date().getTime(),\n      body: payload,\n      isAdmin: true,\n      time: \"just now\"\n    };\n    context.commit('sendMessage', message);\n  },\n  toggleChatSidebar: function toggleChatSidebar(context, payload) {\n    context.commit('toggleChatSidebarHandler', payload);\n  }\n}; // mutations\n\nvar mutations = {\n  getUsers: function getUsers(state) {\n    state.loadingChatModule = true;\n  },\n  getUserSuccess: function getUserSuccess(state) {\n    state.users = users;\n    state.loadingChatModule = false;\n  },\n  loadChat: function loadChat(state, user) {\n    state.loadingChat = true;\n    state.selectedUser = user;\n\n    for (var i = 0; i < state.users.length; i++) {\n      var selectedUser = state.users[i];\n\n      if (selectedUser.id === user.id) {\n        state.users[i].selected = true;\n        state.chatSidebar = false;\n      } else {\n        state.users[i].selected = false;\n      }\n    }\n  },\n  loadChatSuccess: function loadChatSuccess(state) {\n    state.loadingChat = false;\n  },\n  sendMessage: function sendMessage(state, message) {\n    for (var i = 0; i < state.users.length; i++) {\n      var user = state.users[i];\n\n      if (user.selected) {\n        state.users[i].chats.push(message);\n      }\n    }\n  },\n  toggleChatSidebarHandler: function toggleChatSidebarHandler(state, val) {\n    state.chatSidebar = val;\n  }\n};\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["src/store/modules/chat/index.js"],"names":["users","state","loadingChatModule","selectedUser","loadingChat","chatSidebar","getters","actions","getUsers","context","commit","setTimeout","openChat","payload","sendMessage","message","id","Date","getTime","body","isAdmin","time","toggleChatSidebar","mutations","getUserSuccess","loadChat","user","i","length","selected","loadChatSuccess","chats","push","toggleChatSidebarHandler","val"],"mappings":"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","sourceRoot":"/Users/admin/Desktop/template-vue","sourcesContent":["/**\n * Auth Module\n */\nimport { users } from './data';\n\nconst state = {\n    users: null,\n    loadingChatModule: false,\n    selectedUser: null,\n    loadingChat: false,\n    chatSidebar: false\n}\n\n// getters\nconst getters = {\n    loadingChatModule: state => {\n        return state.loadingChatModule\n    },\n    users: state => {\n        return state.users\n    },\n    selectedUser: state => {\n        return state.selectedUser\n    },\n    loadingChat: state => {\n        return state.loadingChat\n    },\n    chatSidebar: state => {\n        return state.chatSidebar\n    }\n}\n\n// actions\nconst actions = {\n    getUsers(context) {\n        context.commit('getUsers');\n        setTimeout(() => {\n            context.commit('getUserSuccess');\n        }, 2000);\n    },\n    openChat(context, payload) {\n        context.commit('loadChat', payload);\n        setTimeout(() => {\n            context.commit('loadChatSuccess');\n        }, 2000);\n    },\n    sendMessage(context, payload) {\n        let message = {\n            id: new Date().getTime(),\n            body: payload,\n            isAdmin: true,\n            time:\"just now\"\n        }\n        context.commit('sendMessage', message)\n    },\n    toggleChatSidebar(context, payload) {\n        context.commit('toggleChatSidebarHandler', payload);\n    }\n}\n\n// mutations\nconst mutations = {\n    getUsers(state) {\n        state.loadingChatModule = true;\n    },\n    getUserSuccess(state) {\n        state.users = users;\n        state.loadingChatModule = false;\n    },\n    loadChat(state, user) {\n        state.loadingChat = true\n        state.selectedUser = user\n        for (let i = 0; i < state.users.length; i++) {\n            let selectedUser = state.users[i];\n            if (selectedUser.id === user.id) {\n                state.users[i].selected = true\n                state.chatSidebar = false\n            } else {\n                state.users[i].selected = false\n            }\n        }\n    },\n    loadChatSuccess(state) {\n        state.loadingChat = false\n    },\n    sendMessage(state, message) {\n        for (let i = 0; i < state.users.length; i++) {\n            let user = state.users[i];\n            if (user.selected) {\n                state.users[i].chats.push(message)\n            }\n        }\n    },\n    toggleChatSidebarHandler(state, val) {\n        state.chatSidebar = val;\n    }\n}\n\nexport default {\n    state,\n    getters,\n    actions,\n    mutations\n}\n"]}]}