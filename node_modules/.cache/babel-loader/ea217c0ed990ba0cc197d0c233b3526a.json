{"remainingRequest":"/Users/admin/Desktop/template-vue/node_modules/babel-loader/lib/index.js!/Users/admin/Desktop/template-vue/src/store/modules/sidebar/index.js","dependencies":[{"path":"/Users/admin/Desktop/template-vue/src/store/modules/sidebar/index.js","mtime":1535529988000},{"path":"/Users/admin/Desktop/template-vue/node_modules/cache-loader/dist/cjs.js","mtime":1544032770804},{"path":"/Users/admin/Desktop/template-vue/node_modules/babel-loader/lib/index.js","mtime":1529635966000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\n\n/**\n * Sidebar Module\n */\nimport { menus } from './data.js';\nvar state = {\n  menus: menus\n};\nvar getters = {\n  menus: function menus(state) {\n    return state.menus;\n  }\n};\nvar actions = {\n  setActiveMenuGroup: function setActiveMenuGroup(context, payload) {\n    context.commit('setActiveMenuGroupHandler', payload);\n  }\n};\nvar mutations = {\n  setActiveMenuGroupHandler: function setActiveMenuGroupHandler(state, router) {\n    var fullPath = router.history.current.fullPath;\n    var path = fullPath.split('/');\n    var matchedPath = '/' + path[2] + '/' + path[3];\n\n    for (var category in state.menus) {\n      for (var menuGroup in state.menus[category]) {\n        if (state.menus[category][menuGroup].items !== null) {\n          for (var matched in state.menus[category][menuGroup].items) {\n            if (state.menus[category][menuGroup].items[matched].path == matchedPath || state.menus[category][menuGroup].items[matched].path == fullPath) {\n              state.menus[category][menuGroup].active = true;\n            }\n          }\n        }\n      }\n    }\n  }\n};\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["src/store/modules/sidebar/index.js"],"names":["menus","state","getters","actions","setActiveMenuGroup","context","payload","commit","mutations","setActiveMenuGroupHandler","router","fullPath","history","current","path","split","matchedPath","category","menuGroup","items","matched","active"],"mappings":";;AAAA;;;AAIA,SAASA,KAAT,QAAsB,WAAtB;AAEA,IAAMC,QAAQ;AACVD;AADU,CAAd;AAIA,IAAME,UAAU;AACZF,SAAO,sBAAS;AACZ,WAAOC,MAAMD,KAAb;AACH;AAHW,CAAhB;AAMA,IAAMG,UAAU;AACZC,oBADY,8BACOC,OADP,EACgBC,OADhB,EACyB;AACjCD,YAAQE,MAAR,CAAe,2BAAf,EAA4CD,OAA5C;AACH;AAHW,CAAhB;AAMA,IAAME,YAAY;AACdC,2BADc,qCACYR,KADZ,EACmBS,MADnB,EAC2B;AACrC,QAAIC,WAAWD,OAAOE,OAAP,CAAeC,OAAf,CAAuBF,QAAtC;AACA,QAAIG,OAAOH,SAASI,KAAT,CAAe,GAAf,CAAX;AACA,QAAIC,cAAc,MAAMF,KAAK,CAAL,CAAN,GAAgB,GAAhB,GAAsBA,KAAK,CAAL,CAAxC;;AACA,SAAK,IAAMG,QAAX,IAAuBhB,MAAMD,KAA7B,EAAoC;AAChC,WAAI,IAAMkB,SAAV,IAAuBjB,MAAMD,KAAN,CAAYiB,QAAZ,CAAvB,EAA8C;AAC1C,YAAGhB,MAAMD,KAAN,CAAYiB,QAAZ,EAAsBC,SAAtB,EAAiCC,KAAjC,KAA2C,IAA9C,EAAoD;AAChD,eAAI,IAAMC,OAAV,IAAqBnB,MAAMD,KAAN,CAAYiB,QAAZ,EAAsBC,SAAtB,EAAiCC,KAAtD,EAA4D;AACxD,gBAAGlB,MAAMD,KAAN,CAAYiB,QAAZ,EAAsBC,SAAtB,EAAiCC,KAAjC,CAAuCC,OAAvC,EAAgDN,IAAhD,IAAwDE,WAAxD,IAAuEf,MAAMD,KAAN,CAAYiB,QAAZ,EAAsBC,SAAtB,EAAiCC,KAAjC,CAAuCC,OAAvC,EAAgDN,IAAhD,IAAwDH,QAAlI,EAA4I;AACzIV,oBAAMD,KAAN,CAAYiB,QAAZ,EAAsBC,SAAtB,EAAiCG,MAAjC,GAA0C,IAA1C;AACF;AACJ;AACJ;AACJ;AACJ;AACJ;AAhBa,CAAlB;AAmBA,eAAe;AACXpB,cADW;AAEXC,kBAFW;AAGXC,kBAHW;AAIXK;AAJW,CAAf","sourceRoot":"/Users/admin/Desktop/template-vue","sourcesContent":["/**\n * Sidebar Module\n */\n\nimport { menus } from './data.js';\n\nconst state = {\n    menus\n}\n\nconst getters = {\n    menus: state => {\n        return state.menus;\n    }\n}\n\nconst actions = {\n    setActiveMenuGroup(context, payload) {\n        context.commit('setActiveMenuGroupHandler', payload);\n    }\n}\n\nconst mutations = {\n    setActiveMenuGroupHandler(state, router) {\n        let fullPath = router.history.current.fullPath;\n        let path = fullPath.split('/');\n        let matchedPath = '/' + path[2] + '/' + path[3];\n        for (const category in state.menus) {\n            for(const menuGroup in state.menus[category]) {\n                if(state.menus[category][menuGroup].items !== null) {\n                    for(const matched in state.menus[category][menuGroup].items){\n                        if(state.menus[category][menuGroup].items[matched].path == matchedPath || state.menus[category][menuGroup].items[matched].path == fullPath ){\n                           state.menus[category][menuGroup].active = true;\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport default {\n    state,\n    getters,\n    actions,\n    mutations\n}"]}]}