{"remainingRequest":"/Users/admin/Desktop/template-vue/node_modules/babel-loader/lib/index.js!/Users/admin/Desktop/template-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/Desktop/template-vue/src/components/Widgets/RecentOrders.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/admin/Desktop/template-vue/src/components/Widgets/RecentOrders.vue","mtime":1535529988000},{"path":"/Users/admin/Desktop/template-vue/node_modules/cache-loader/dist/cjs.js","mtime":1544032770804},{"path":"/Users/admin/Desktop/template-vue/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/Users/admin/Desktop/template-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport api from \"Api\";\nexport default {\n  data: function data() {\n    return {\n      loader: true,\n      selected: [],\n      headers: [{\n        text: \"Order Id\",\n        align: \"center\",\n        sortable: false,\n        value: \"id\"\n      }, {\n        text: \"Product Name\",\n        align: \"center\",\n        sortable: false,\n        value: \"productName\"\n      }, {\n        text: \"Quantity\",\n        align: \"center\",\n        sortable: false,\n        value: \"quantity\"\n      }, {\n        text: \"Status\",\n        align: \"center\",\n        sortable: false,\n        value: \"status\"\n      }, {\n        text: \"Amount\",\n        align: \"center\",\n        sortable: false,\n        value: \"amount\"\n      }, {\n        text: \"\",\n        align: \"center\",\n        sortable: false\n      }],\n      items: []\n    };\n  },\n  mounted: function mounted() {\n    this.getShoppingCart();\n  },\n  methods: {\n    toggleAll: function toggleAll() {\n      if (this.selected.length) this.selected = [];else this.selected = this.items.slice();\n    },\n    // on delete cart item\n    onDeleteCartItem: function onDeleteCartItem(item) {\n      var index = this.items.indexOf(item);\n      this.items.splice(index, 1);\n    },\n    getShoppingCart: function getShoppingCart() {\n      var _this = this;\n\n      api.get(\"vuely/recentOrders.js\").then(function (response) {\n        _this.loader = false;\n        _this.items = response.data;\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }\n};",{"version":3,"sources":["RecentOrders.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA,OAAA,GAAA,MAAA,KAAA;AAEA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,cAAA,IADA;AAEA,gBAAA,EAFA;AAGA,eAAA,CACA;AACA,cAAA,UADA;AAEA,eAAA,QAFA;AAGA,kBAAA,KAHA;AAIA,eAAA;AAJA,OADA,EAOA;AACA,cAAA,cADA;AAEA,eAAA,QAFA;AAGA,kBAAA,KAHA;AAIA,eAAA;AAJA,OAPA,EAaA;AACA,cAAA,UADA;AAEA,eAAA,QAFA;AAGA,kBAAA,KAHA;AAIA,eAAA;AAJA,OAbA,EAmBA;AACA,cAAA,QADA;AAEA,eAAA,QAFA;AAGA,kBAAA,KAHA;AAIA,eAAA;AAJA,OAnBA,EAyBA;AACA,cAAA,QADA;AAEA,eAAA,QAFA;AAGA,kBAAA,KAHA;AAIA,eAAA;AAJA,OAzBA,EA+BA;AACA,cAAA,EADA;AAEA,eAAA,QAFA;AAGA,kBAAA;AAHA,OA/BA,CAHA;AAwCA,aAAA;AAxCA,KAAA;AA0CA,GA5CA;AA6CA,SA7CA,qBA6CA;AACA,SAAA,eAAA;AACA,GA/CA;AAgDA,WAAA;AACA,aADA,uBACA;AACA,UAAA,KAAA,QAAA,CAAA,MAAA,EAAA,KAAA,QAAA,GAAA,EAAA,CAAA,KACA,KAAA,QAAA,GAAA,KAAA,KAAA,CAAA,KAAA,EAAA;AACA,KAJA;AAKA;AACA,oBANA,4BAMA,IANA,EAMA;AACA,UAAA,QAAA,KAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACA,WAAA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA;AACA,KATA;AAUA,mBAVA,6BAUA;AAAA;;AACA,UACA,GADA,CACA,uBADA,EAEA,IAFA,CAEA,oBAAA;AACA,cAAA,MAAA,GAAA,KAAA;AACA,cAAA,KAAA,GAAA,SAAA,IAAA;AACA,OALA,EAMA,KANA,CAMA,iBAAA;AACA,gBAAA,GAAA,CAAA,KAAA;AACA,OARA;AASA;AApBA;AAhDA,CAAA","sourcesContent":["<!-- Shopping Cart Widget -->\n<template>\n  <div>\n    <app-section-loader :status=\"loader\"></app-section-loader>\n  \t<v-data-table :headers=\"headers\" :items=\"items\" v-model=\"selected\" item-key=\"id\" select-all hide-actions>\n\t\t<template slot=\"headers\" slot-scope=\"props\">\n\t\t\t<tr>\n\t\t\t\t<th>\n\t\t\t\t\t<v-checkbox color=\"primary\" hide-details @click.native=\"toggleAll\" :input-value=\"props.all\" :indeterminate=\"props.indeterminate\"></v-checkbox>\n\t\t\t\t</th>\n\t\t\t\t<th class=\"text-xs-left fw-bold\" v-for=\"header in props.headers\" :key=\"header.text\">\n\t\t\t\t\t{{ header.text }}\n\t\t\t\t</th>\n\t\t\t</tr>\n\t\t</template>\n\t\t<template slot=\"items\" slot-scope=\"props\">\n\t\t\t<tr>\n\t\t\t\t<td>\n\t\t\t\t\t<v-checkbox color=\"primary\" hide-details v-model=\"props.selected\"></v-checkbox>\n\t\t\t\t</td>\n\t\t\t\t<td>{{ props.item.id }}</td>\n\t\t\t\t<td>{{ props.item.productName }}</td>\n\t\t\t\t<td>{{ props.item.quantity }}</td>\n\t\t\t\t<td><v-badge :class=\"props.item.labelClasses\">{{ props.item.status }}</v-badge></td>\n\t\t\t\t<td>$ {{ props.item.amount }}</td>\n\t\t\t\t<td>\n\t\t\t\t\t<v-btn flat icon color=\"error\" @click=\"onDeleteCartItem(props.item)\">\n              \t\t<v-icon class=\"zmdi zmdi-delete\"></v-icon>\n            \t</v-btn>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t</template>\n\t</v-data-table>\n  </div>\n</template>\n\n<script>\nimport api from \"Api\";\n\nexport default {\n  data() {\n    return {\n      loader: true,\n      selected: [],\n      headers: [\n        {\n          text: \"Order Id\",\n          align: \"center\",\n          sortable: false,\n          value: \"id\"\n        },\n        {\n          text: \"Product Name\",\n          align: \"center\",\n          sortable: false,\n          value: \"productName\"\n        },\n        {\n          text: \"Quantity\",\n          align: \"center\",\n          sortable: false,\n          value: \"quantity\"\n        },\n        {\n          text: \"Status\",\n          align: \"center\",\n          sortable: false,\n          value: \"status\"\n        },\n        {\n          text: \"Amount\",\n          align: \"center\",\n          sortable: false,\n          value: \"amount\"\n        },\n        {\n          text: \"\",\n          align: \"center\",\n          sortable: false\n        }\n      ],\n      items: []\n    };\n  },\n  mounted() {\n    this.getShoppingCart();\n  },\n  methods: {\n    toggleAll() {\n      if (this.selected.length) this.selected = [];\n      else this.selected = this.items.slice();\n    },\n    // on delete cart item\n    onDeleteCartItem(item) {\n      let index = this.items.indexOf(item);\n      this.items.splice(index, 1);\n    },\n    getShoppingCart() {\n      api\n        .get(\"vuely/recentOrders.js\")\n        .then(response => {\n          this.loader = false;\n          this.items = response.data;\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n  }\n};\n</script>\n"],"sourceRoot":"src/components/Widgets"}]}