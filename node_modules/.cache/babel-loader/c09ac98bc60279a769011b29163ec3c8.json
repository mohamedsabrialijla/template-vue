{"remainingRequest":"/Users/admin/Desktop/template-vue/node_modules/babel-loader/lib/index.js!/Users/admin/Desktop/template-vue/src/components/Charts/LineChart.js","dependencies":[{"path":"/Users/admin/Desktop/template-vue/src/components/Charts/LineChart.js","mtime":1535529988000},{"path":"/Users/admin/Desktop/template-vue/node_modules/cache-loader/dist/cjs.js","mtime":1544032770804},{"path":"/Users/admin/Desktop/template-vue/node_modules/babel-loader/lib/index.js","mtime":1529635966000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n// Line Chart Widget\nimport { Line } from 'vue-chartjs';\nimport { ChartConfig } from \"Constants/chart-config\";\nexport default {\n  extends: Line,\n  props: {\n    dataSet: {\n      type: Array,\n      default: function _default() {\n        return [10, 30, 30, 60, 75, 10];\n      }\n    },\n    lineTension: {\n      type: Number,\n      default: function _default() {\n        return 0.3;\n      }\n    },\n    dataLabels: {\n      type: Array,\n      default: function _default() {\n        return ['A', 'B', 'C', 'D', 'E', 'F'];\n      }\n    },\n    gradientColor1: {\n      type: String,\n      default: function _default() {\n        return ChartConfig.color.white;\n      }\n    },\n    gradientColor2: {\n      type: String,\n      default: function _default() {\n        return ChartConfig.color.white;\n      }\n    },\n    enableGradient: {\n      type: Boolean,\n      default: function _default() {\n        return true;\n      }\n    },\n    borderColor: {\n      type: String,\n      default: function _default() {\n        return ChartConfig.color.white;\n      }\n    }\n  },\n  data: function data() {\n    return {\n      gradient1: null,\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true,\n              display: false\n            },\n            gridLines: {\n              display: false,\n              drawBorder: false,\n              drawTicks: false\n            }\n          }],\n          xAxes: [{\n            ticks: {\n              display: false,\n              beginAtZero: true\n            },\n            gridLines: {\n              display: true,\n              drawBorder: false\n            }\n          }]\n        },\n        legend: {\n          display: false\n        }\n      }\n    };\n  },\n  mounted: function mounted() {\n    var ctx = this.$refs.canvas.getContext('2d');\n    var _stroke = ctx.stroke;\n\n    ctx.stroke = function () {\n      ctx.save();\n      ctx.shadowColor = 'rgba(0,0,0,0.5)';\n      ctx.shadowBlur = 8;\n      ctx.shadowOffsetX = 0;\n      ctx.shadowOffsetY = 4;\n\n      _stroke.apply(this, arguments);\n\n      ctx.restore();\n    };\n\n    var gradientColor = ' ';\n\n    if (this.enableGradient) {\n      this.gradient1 = this.$refs.canvas.getContext('2d').createLinearGradient(0, 0, 250, 0);\n      this.gradient1.addColorStop(0, this.gradientColor1);\n      this.gradient1.addColorStop(1, this.gradientColor2);\n      gradientColor = this.gradient1;\n    } else {\n      gradientColor = this.borderColor;\n    }\n\n    this.renderChart({\n      labels: this.dataLabels,\n      datasets: [{\n        label: 'My First dataset',\n        data: this.dataSet,\n        lineTension: this.lineTension,\n        borderColor: gradientColor,\n        pointBorderWidth: 0,\n        pointHoverRadius: 0,\n        pointRadius: 0,\n        pointHoverBorderWidth: 0,\n        borderWidth: 3,\n        fill: false\n      }]\n    }, this.options);\n  }\n};",{"version":3,"sources":["src/components/Charts/LineChart.js"],"names":["Line","ChartConfig","extends","props","dataSet","type","Array","default","lineTension","Number","dataLabels","gradientColor1","String","color","white","gradientColor2","enableGradient","Boolean","borderColor","data","gradient1","options","responsive","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","display","gridLines","drawBorder","drawTicks","xAxes","legend","mounted","ctx","$refs","canvas","getContext","_stroke","stroke","save","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","apply","arguments","restore","gradientColor","createLinearGradient","addColorStop","renderChart","labels","datasets","label","pointBorderWidth","pointHoverRadius","pointRadius","pointHoverBorderWidth","borderWidth","fill"],"mappings":";AAAA;AACA,SAASA,IAAT,QAAqB,aAArB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AAEA,eAAe;AACZC,WAASF,IADG;AAEZG,SAAO;AACJC,aAAS;AACNC,YAAMC,KADA;AAENC,eAAS;AAAA,eAAM,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CAAN;AAAA;AAFH,KADL;AAKJC,iBAAa;AACVH,YAAMI,MADI;AAEVF,eAAS;AAAA,eAAM,GAAN;AAAA;AAFC,KALT;AASJG,gBAAY;AACTL,YAAMC,KADG;AAETC,eAAS;AAAA,eAAM,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,CAAN;AAAA;AAFA,KATR;AAaJI,oBAAgB;AACbN,YAAMO,MADO;AAEbL,eAAS;AAAA,eAAMN,YAAYY,KAAZ,CAAkBC,KAAxB;AAAA;AAFI,KAbZ;AAiBJC,oBAAgB;AACbV,YAAMO,MADO;AAEbL,eAAS;AAAA,eAAMN,YAAYY,KAAZ,CAAkBC,KAAxB;AAAA;AAFI,KAjBZ;AAqBJE,oBAAgB;AACbX,YAAMY,OADO;AAEbV,eAAS;AAAA,eAAM,IAAN;AAAA;AAFI,KArBZ;AAyBJW,iBAAa;AACVb,YAAMO,MADI;AAEVL,eAAS;AAAA,eAAMN,YAAYY,KAAZ,CAAkBC,KAAxB;AAAA;AAFC;AAzBT,GAFK;AAgCZK,MAhCY,kBAgCL;AACJ,WAAO;AACJC,iBAAW,IADP;AAEJC,eAAS;AACNC,oBAAY,IADN;AAENC,6BAAqB,KAFf;AAGNC,gBAAQ;AACLC,iBAAO,CAAC;AACLC,mBAAO;AACJC,2BAAa,IADT;AAEJC,uBAAS;AAFL,aADF;AAKLC,uBAAW;AACRD,uBAAS,KADD;AAERE,0BAAY,KAFJ;AAGRC,yBAAW;AAHH;AALN,WAAD,CADF;AAYLC,iBAAO,CAAC;AACLN,mBAAO;AACJE,uBAAS,KADL;AAEJD,2BAAa;AAFT,aADF;AAKLE,uBAAW;AACRD,uBAAS,IADD;AAERE,0BAAY;AAFJ;AALN,WAAD;AAZF,SAHF;AA0BNG,gBAAQ;AACLL,mBAAS;AADJ;AA1BF;AAFL,KAAP;AAiCF,GAlEW;AAmEZM,SAnEY,qBAmEF;AACP,QAAIC,MAAM,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,UAAlB,CAA6B,IAA7B,CAAV;AACA,QAAIC,UAAUJ,IAAIK,MAAlB;;AACAL,QAAIK,MAAJ,GAAa,YAAY;AACtBL,UAAIM,IAAJ;AACAN,UAAIO,WAAJ,GAAkB,iBAAlB;AACAP,UAAIQ,UAAJ,GAAiB,CAAjB;AACAR,UAAIS,aAAJ,GAAoB,CAApB;AACAT,UAAIU,aAAJ,GAAoB,CAApB;;AACAN,cAAQO,KAAR,CAAc,IAAd,EAAoBC,SAApB;;AACAZ,UAAIa,OAAJ;AACF,KARD;;AAUA,QAAIC,gBAAgB,GAApB;;AACA,QAAI,KAAKjC,cAAT,EAAyB;AACtB,WAAKI,SAAL,GAAiB,KAAKgB,KAAL,CAAWC,MAAX,CAAkBC,UAAlB,CAA6B,IAA7B,EAAmCY,oBAAnC,CAAwD,CAAxD,EAA2D,CAA3D,EAA8D,GAA9D,EAAmE,CAAnE,CAAjB;AACA,WAAK9B,SAAL,CAAe+B,YAAf,CAA4B,CAA5B,EAA+B,KAAKxC,cAApC;AACA,WAAKS,SAAL,CAAe+B,YAAf,CAA4B,CAA5B,EAA+B,KAAKpC,cAApC;AACAkC,sBAAgB,KAAK7B,SAArB;AACF,KALD,MAKO;AACJ6B,sBAAgB,KAAK/B,WAArB;AACF;;AAED,SAAKkC,WAAL,CAAiB;AACdC,cAAQ,KAAK3C,UADC;AAEd4C,gBAAU,CAAC;AACRC,eAAO,kBADC;AAERpC,cAAM,KAAKf,OAFH;AAGRI,qBAAa,KAAKA,WAHV;AAIRU,qBAAa+B,aAJL;AAKRO,0BAAkB,CALV;AAMRC,0BAAkB,CANV;AAORC,qBAAa,CAPL;AAQRC,+BAAuB,CARf;AASRC,qBAAa,CATL;AAURC,cAAM;AAVE,OAAD;AAFI,KAAjB,EAcG,KAAKxC,OAdR;AAeF;AAzGW,CAAf","sourceRoot":"/Users/admin/Desktop/template-vue","sourcesContent":["// Line Chart Widget\nimport { Line } from 'vue-chartjs'\nimport { ChartConfig } from \"Constants/chart-config\";\n\nexport default {\n   extends: Line,\n   props: {\n      dataSet: {\n         type: Array,\n         default: () => [10, 30, 30, 60, 75, 10]\n      },\n      lineTension: {\n         type: Number,\n         default: () => 0.3\n      },\n      dataLabels: {\n         type: Array,\n         default: () => ['A', 'B', 'C', 'D', 'E', 'F']\n      },\n      gradientColor1: {\n         type: String,\n         default: () => ChartConfig.color.white\n      },\n      gradientColor2: {\n         type: String,\n         default: () => ChartConfig.color.white\n      },\n      enableGradient: {\n         type: Boolean,\n         default: () => true\n      },\n      borderColor: {\n         type: String,\n         default: () => ChartConfig.color.white\n      }\n   },\n   data() {\n      return {\n         gradient1: null,\n         options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            scales: {\n               yAxes: [{\n                  ticks: {\n                     beginAtZero: true,\n                     display: false\n                  },\n                  gridLines: {\n                     display: false,\n                     drawBorder: false,\n                     drawTicks: false\n                  }\n               }],\n               xAxes: [{\n                  ticks: {\n                     display: false,\n                     beginAtZero: true\n                  },\n                  gridLines: {\n                     display: true,\n                     drawBorder: false\n                  }\n               }]\n            },\n            legend: {\n               display: false\n            }\n         }\n      }\n   },\n   mounted() {\n      let ctx = this.$refs.canvas.getContext('2d')\n      let _stroke = ctx.stroke\n      ctx.stroke = function () {\n         ctx.save()\n         ctx.shadowColor = 'rgba(0,0,0,0.5)'\n         ctx.shadowBlur = 8\n         ctx.shadowOffsetX = 0\n         ctx.shadowOffsetY = 4\n         _stroke.apply(this, arguments)\n         ctx.restore()\n      }\n\n      let gradientColor = ' '\n      if (this.enableGradient) {\n         this.gradient1 = this.$refs.canvas.getContext('2d').createLinearGradient(0, 0, 250, 0)\n         this.gradient1.addColorStop(0, this.gradientColor1)\n         this.gradient1.addColorStop(1, this.gradientColor2)\n         gradientColor = this.gradient1\n      } else {\n         gradientColor = this.borderColor\n      }\n\n      this.renderChart({\n         labels: this.dataLabels,\n         datasets: [{\n            label: 'My First dataset',\n            data: this.dataSet,\n            lineTension: this.lineTension,\n            borderColor: gradientColor,\n            pointBorderWidth: 0,\n            pointHoverRadius: 0,\n            pointRadius: 0,\n            pointHoverBorderWidth: 0,\n            borderWidth: 3,\n            fill: false\n         }]\n      }, this.options)\n   }\n}\n"]}]}