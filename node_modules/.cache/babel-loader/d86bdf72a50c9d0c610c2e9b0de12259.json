{"remainingRequest":"/Users/admin/Desktop/template-vue/node_modules/babel-loader/lib/index.js!/Users/admin/Desktop/template-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/Desktop/template-vue/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/admin/Desktop/template-vue/src/App.vue","mtime":1537465468000},{"path":"/Users/admin/Desktop/template-vue/node_modules/cache-loader/dist/cjs.js","mtime":1544032770804},{"path":"/Users/admin/Desktop/template-vue/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/Users/admin/Desktop/template-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/admin/Desktop/template-vue/node_modules/@babel/runtime/helpers/builtin/es6/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from \"vuex\";\nimport AuthService from \"./auth/AuthService\";\nvar auth = new AuthService();\nvar login = auth.login,\n    logout = auth.logout,\n    authenticated = auth.authenticated,\n    authNotifier = auth.authNotifier;\nexport default {\n  data: function data() {\n    var _this = this;\n\n    authNotifier.on(\"authChange\", function (authState) {\n      _this.authenticated = authState.authenticated;\n    });\n    return {\n      auth: auth,\n      authenticated: authenticated,\n      animation: {\n        enter: {\n          opacity: [1, 0],\n          translateX: [0, -300],\n          scale: [1, 0.2]\n        },\n        leave: {\n          opacity: 0,\n          height: 0\n        }\n      }\n    };\n  },\n  mounted: function mounted() {\n    if (this.selectedLocale.locale === \"he\" || this.selectedLocale.locale === \"ar\") {\n      this.$store.dispatch(\"rtlLayout\");\n    }\n  },\n  computed: _objectSpread({}, mapGetters([\"darkMode\", \"collapseSidebar\", \"boxLayout\", \"rtlLayout\", \"selectedLocale\"]))\n};",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA,SAAA,UAAA,QAAA,MAAA;AAEA,OAAA,WAAA,MAAA,oBAAA;AAEA,IAAA,OAAA,IAAA,WAAA,EAAA;IAEA,K,GAAA,I,CAAA,K;IAAA,M,GAAA,I,CAAA,M;IAAA,a,GAAA,I,CAAA,a;IAAA,Y,GAAA,I,CAAA,Y;AAEA,eAAA;AACA,MADA,kBACA;AAAA;;AACA,iBAAA,EAAA,CAAA,YAAA,EAAA,qBAAA;AACA,YAAA,aAAA,GAAA,UAAA,aAAA;AACA,KAFA;AAGA,WAAA;AACA,gBADA;AAEA,kCAFA;AAGA,iBAAA;AACA,eAAA;AACA,mBAAA,CAAA,CAAA,EAAA,CAAA,CADA;AAEA,sBAAA,CAAA,CAAA,EAAA,CAAA,GAAA,CAFA;AAGA,iBAAA,CAAA,CAAA,EAAA,GAAA;AAHA,SADA;AAMA,eAAA;AACA,mBAAA,CADA;AAEA,kBAAA;AAFA;AANA;AAHA,KAAA;AAeA,GApBA;AAqBA,SArBA,qBAqBA;AACA,QACA,KAAA,cAAA,CAAA,MAAA,KAAA,IAAA,IACA,KAAA,cAAA,CAAA,MAAA,KAAA,IAFA,EAGA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,WAAA;AACA;AACA,GA5BA;AA6BA,8BACA,WAAA,CACA,UADA,EAEA,iBAFA,EAGA,WAHA,EAIA,WAJA,EAKA,gBALA,CAAA,CADA;AA7BA,CAAA","sourcesContent":["<template>\n  <v-app\n\t:dark=\"darkMode\"\n\tid=\"inspire\"\n\t:class=\"[{ \n\t\t'box-layout': boxLayout, \n\t\t'collapse-sidebar': collapseSidebar, \n\t\t'rtl-layout': rtlLayout\n\t}]\"\n  > \n    \t<router-view :auth=\"auth\" :authenticated=\"authenticated\"></router-view>\n      <notifications \n        group=\"loggedIn\" \n        position=\"top right\"\n        animation-type=\"velocity\"\n      />\n  </v-app>\n</template>\n\n<script>\nimport { mapGetters } from \"vuex\";\n\nimport AuthService from \"./auth/AuthService\";\n\nconst auth = new AuthService();\n\nconst { login, logout, authenticated, authNotifier } = auth;\n\nexport default {\n  data() {\n    authNotifier.on(\"authChange\", authState => {\n      this.authenticated = authState.authenticated;\n    });\n    return {\n      auth,\n      authenticated,\n      animation: {\n        enter: {\n          opacity: [1, 0],\n          translateX: [0, -300],\n          scale: [1, 0.2]\n        },\n        leave: {\n          opacity: 0,\n          height: 0\n        }\n     }\n    };\n  },\n  mounted() {\n    if (\n      this.selectedLocale.locale === \"he\" ||\n      this.selectedLocale.locale === \"ar\"\n    ) {\n      this.$store.dispatch(\"rtlLayout\");\n    }\n  },\n  computed: {\n    ...mapGetters([\n      \"darkMode\",\n      \"collapseSidebar\",\n      \"boxLayout\",\n      \"rtlLayout\",\n      \"selectedLocale\"\n    ])\n  }\n};\n</script>\n"],"sourceRoot":"src"}]}