{"remainingRequest":"/Users/admin/Desktop/template-vue/node_modules/babel-loader/lib/index.js!/Users/admin/Desktop/template-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/Desktop/template-vue/src/views/chat/components/ChatSidebar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/admin/Desktop/template-vue/src/views/chat/components/ChatSidebar.vue","mtime":1535529988000},{"path":"/Users/admin/Desktop/template-vue/node_modules/cache-loader/dist/cjs.js","mtime":1544032770804},{"path":"/Users/admin/Desktop/template-vue/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/Users/admin/Desktop/template-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/admin/Desktop/template-vue/node_modules/@babel/runtime/helpers/builtin/es6/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from \"vuex\";\nimport { getCurrentAppLayout } from \"Helpers/helpers\";\nexport default {\n  computed: _objectSpread({}, mapGetters([\"users\", \"selectedUser\"])),\n  data: function data() {\n    return {\n      settings: {\n        maxScrollbarLength: 160\n      }\n    };\n  },\n  methods: {\n    openChat: function openChat(user) {\n      this.$store.dispatch(\"openChat\", user);\n    },\n    getScrollHeight: function getScrollHeight() {\n      var layout = getCurrentAppLayout(this.$router);\n\n      switch (layout) {\n        case \"default\":\n          return \"height: calc(100vh - 130px)\";\n\n        case \"horizontal\":\n          return \"height: calc(100vh - 180px)\";\n\n        case \"boxed\":\n          return \"height: calc(100vh - 305px)\";\n\n        case \"boxed-v2\":\n          return \"height: calc(100vh - 305px)\";\n\n        default:\n          return \"height: calc(100vh - 130px)\";\n      }\n    }\n  }\n};",{"version":3,"sources":["ChatSidebar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,SAAA,UAAA,QAAA,MAAA;AACA,SAAA,mBAAA,QAAA,iBAAA;AAEA,eAAA;AACA,8BACA,WAAA,CAAA,OAAA,EAAA,cAAA,CAAA,CADA,CADA;AAIA,MAJA,kBAIA;AACA,WAAA;AACA,gBAAA;AACA,4BAAA;AADA;AADA,KAAA;AAKA,GAVA;AAWA,WAAA;AACA,YADA,oBACA,IADA,EACA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,UAAA,EAAA,IAAA;AACA,KAHA;AAIA,mBAJA,6BAIA;AACA,UAAA,SAAA,oBAAA,KAAA,OAAA,CAAA;;AACA,cAAA,MAAA;AACA,aAAA,SAAA;AACA,iBAAA,6BAAA;;AACA,aAAA,YAAA;AACA,iBAAA,6BAAA;;AACA,aAAA,OAAA;AACA,iBAAA,6BAAA;;AACA,aAAA,UAAA;AACA,iBAAA,6BAAA;;AACA;AACA,iBAAA,6BAAA;AAVA;AAYA;AAlBA;AAXA,CAAA","sourcesContent":["<template>\n   <v-card class=\"chat-content\">\n      <v-toolbar color=\"primary\" dark>\n         <v-toolbar-title>Chat</v-toolbar-title>\n         <v-spacer></v-spacer>\n         <v-btn icon>\n            <v-icon>search</v-icon>\n         </v-btn>\n      </v-toolbar>\n      <v-list>\n         <vue-perfect-scrollbar class=\"chat-sidebar-scroll\" :style=\"getScrollHeight()\" :settings=\"settings\">\n            <template v-for=\"(item, index) in users\">\n\t\t\t\t\t<v-list-tile \n\t\t\t\t\t\tavatar\n\t\t\t\t\t\t:key=\"index\" \n\t\t\t\t\t\t@click=\"openChat(item)\" \n\t\t\t\t\t\t:class=\"{'grayish-blue': item.selected }\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<v-list-tile-avatar>\n\t\t\t\t\t\t\t<img :src=\"item.avatar\">\n\t\t\t\t\t\t</v-list-tile-avatar>\n\t\t\t\t\t\t<v-list-tile-content>\n\t\t\t\t\t\t\t<h6 class=\"mb-1\" v-html=\"item.name\"></h6>\n\t\t\t\t\t\t\t<span class=\"fs-12 grey--text\" v-if=\"item.chats.length > 0\" v-html=\"item.chats[item.chats.length - 1].body\"></span>\n\t\t\t\t\t\t</v-list-tile-content>\n\t\t\t\t\t</v-list-tile>\n            </template>\n         </vue-perfect-scrollbar>\n      </v-list>\n   </v-card>\n</template>\n\n<script>\nimport { mapGetters } from \"vuex\";\nimport { getCurrentAppLayout } from \"Helpers/helpers\";\n\nexport default {\n  computed: {\n    ...mapGetters([\"users\", \"selectedUser\"])\n  },\n  data() {\n    return {\n      settings: {\n        maxScrollbarLength: 160\n      }\n    };\n  },\n  methods: {\n    openChat(user) {\n      this.$store.dispatch(\"openChat\", user);\n    },\n    getScrollHeight() {\n      let layout = getCurrentAppLayout(this.$router);\n      switch (layout) {\n        case \"default\":\n          return \"height: calc(100vh - 130px)\";\n        case \"horizontal\":\n          return \"height: calc(100vh - 180px)\";\n        case \"boxed\":\n          return \"height: calc(100vh - 305px)\";\n        case \"boxed-v2\":\n          return \"height: calc(100vh - 305px)\";\n        default:\n          return \"height: calc(100vh - 130px)\";\n      }\n    }\n  }\n};\n</script>\n"],"sourceRoot":"src/views/chat/components"}]}