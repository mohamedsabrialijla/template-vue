{"remainingRequest":"/Users/admin/Desktop/template-vue/node_modules/babel-loader/lib/index.js!/Users/admin/Desktop/template-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/Desktop/template-vue/src/views/drag-drop/VueDraggableResizable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/admin/Desktop/template-vue/src/views/drag-drop/VueDraggableResizable.vue","mtime":1535529988000},{"path":"/Users/admin/Desktop/template-vue/node_modules/cache-loader/dist/cjs.js","mtime":1544032770804},{"path":"/Users/admin/Desktop/template-vue/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/Users/admin/Desktop/template-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport VueDraggableResizable from \"vue-draggable-resizable\";\nexport default {\n  data: function data() {\n    return {\n      width: 0,\n      height: 0,\n      x: 0,\n      y: 0\n    };\n  },\n  methods: {\n    onResize: function onResize(x, y, width, height) {\n      this.x = x;\n      this.y = y;\n      this.width = width;\n      this.height = height;\n    },\n    onDrag: function onDrag(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  },\n  components: {\n    VueDraggableResizable: VueDraggableResizable\n  }\n};",{"version":3,"sources":["VueDraggableResizable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAuBA,OAAA,qBAAA,MAAA,yBAAA;AAEA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,aAAA,CADA;AAEA,cAAA,CAFA;AAGA,SAAA,CAHA;AAIA,SAAA;AAJA,KAAA;AAMA,GARA;AASA,WAAA;AACA,YADA,oBACA,CADA,EACA,CADA,EACA,KADA,EACA,MADA,EACA;AACA,WAAA,CAAA,GAAA,CAAA;AACA,WAAA,CAAA,GAAA,CAAA;AACA,WAAA,KAAA,GAAA,KAAA;AACA,WAAA,MAAA,GAAA,MAAA;AACA,KANA;AAOA,UAPA,kBAOA,CAPA,EAOA,CAPA,EAOA;AACA,WAAA,CAAA,GAAA,CAAA;AACA,WAAA,CAAA,GAAA,CAAA;AACA;AAVA,GATA;AAqBA,cAAA;AACA;AADA;AArBA,CAAA","sourcesContent":["<template>\n\t<div>\n\t\t<page-title-bar></page-title-bar>\n\t\t<v-container fluid grid-list-xl pt-0>\n\t\t\t<app-card\n\t\t\t\theading=\"Draggable Resizable\"\n\t\t\t>\n\t\t\t\t<div style=\"height: 500px; border: 1px solid #ddd; position: relative;\">\n\t\t\t\t\t<vue-draggable-resizable :w=\"300\" :h=\"170\" v-on:dragging=\"onDrag\" v-on:resizing=\"onResize\" :parent=\"true\">\n\t\t\t\t\t\t<v-card hover height=\"100%\">\n\t\t\t\t\t\t\t<v-card-text>\n\t\t\t\t\t\t\t\t<p>Hello! I'm a flexible component. You can drag me around and you can resize me.<br>\n\t\t\t\t\t\t\t\t<code>X: {{ x }} / Y: {{ y }} - Width: {{ width }} / Height: {{ height }}</code></p>\n\t\t\t\t\t\t\t</v-card-text>\n\t\t\t\t\t\t</v-card>\n\t\t\t\t\t</vue-draggable-resizable>\n\t\t\t\t</div>\n\t\t\t</app-card>\n\t\t</v-container>\n\t</div>\n</template>\n\n<script>\nimport VueDraggableResizable from \"vue-draggable-resizable\";\n\nexport default {\n  data() {\n    return {\n      width: 0,\n      height: 0,\n      x: 0,\n      y: 0\n    };\n  },\n  methods: {\n    onResize(x, y, width, height) {\n      this.x = x;\n      this.y = y;\n      this.width = width;\n      this.height = height;\n    },\n    onDrag(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  },\n  components: {\n    VueDraggableResizable\n  }\n};\n</script>\n"],"sourceRoot":"src/views/drag-drop"}]}