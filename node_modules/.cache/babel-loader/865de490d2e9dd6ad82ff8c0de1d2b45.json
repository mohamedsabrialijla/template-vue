{"remainingRequest":"/Users/admin/Desktop/template-vue/node_modules/babel-loader/lib/index.js!/Users/admin/Desktop/template-vue/src/helpers/helpers.js","dependencies":[{"path":"/Users/admin/Desktop/template-vue/src/helpers/helpers.js","mtime":1535529988000},{"path":"/Users/admin/Desktop/template-vue/node_modules/cache-loader/dist/cjs.js","mtime":1544032770804},{"path":"/Users/admin/Desktop/template-vue/node_modules/babel-loader/lib/index.js","mtime":1529635966000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\n\n/**\n * Helpers Functions\n */\nimport moment from 'moment'; // Get Date\n\nexport function getTheDate(timestamp, format) {\n  var time = timestamp * 1000;\n  var formatDate = format ? format : 'MM-DD-YYYY';\n  return moment(time).format(formatDate);\n} // Convert Date To Timestamp\n\nexport function convertDateToTimeStamp(date, format) {\n  var formatDate = format ? format : 'YYYY-MM-DD';\n  return moment(date, formatDate).unix();\n}\n/**\n * Text Truncate\n */\n\nexport function textTruncate(str, length, ending) {\n  if (length == null) {\n    length = 100;\n  }\n\n  if (ending == null) {\n    ending = '...';\n  }\n\n  if (str.length > length) {\n    return str.substring(0, length - ending.length) + ending;\n  } else {\n    return str;\n  }\n}\n/**\n * Function to convert hex to rgba\n */\n\nexport function hexToRgbA(hex, alpha) {\n  var c;\n\n  if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\n    c = hex.substring(1).split('');\n\n    if (c.length === 3) {\n      c = [c[0], c[0], c[1], c[1], c[2], c[2]];\n    }\n\n    c = '0x' + c.join('');\n    return 'rgba(' + [c >> 16 & 255, c >> 8 & 255, c & 255].join(',') + ',' + alpha + ')';\n  }\n\n  throw new Error('Bad Hex');\n}\n/**\n * Function to return currenr app layout\n */\n\nexport function getCurrentAppLayout(router) {\n  var location = router.history.current.fullPath;\n  var path = location.split(\"/\");\n  return path[1];\n}",{"version":3,"sources":["src/helpers/helpers.js"],"names":["moment","getTheDate","timestamp","format","time","formatDate","convertDateToTimeStamp","date","unix","textTruncate","str","length","ending","substring","hexToRgbA","hex","alpha","c","test","split","join","Error","getCurrentAppLayout","router","location","history","current","fullPath","path"],"mappings":";;AAAA;;;AAGA,OAAOA,MAAP,MAAmB,QAAnB,C,CAEA;;AACA,OAAO,SAASC,UAAT,CAAoBC,SAApB,EAA+BC,MAA/B,EAAuC;AAC7C,MAAIC,OAAOF,YAAY,IAAvB;AACA,MAAIG,aAAaF,SAASA,MAAT,GAAkB,YAAnC;AACA,SAAOH,OAAOI,IAAP,EAAaD,MAAb,CAAoBE,UAApB,CAAP;AACA,C,CAED;;AACA,OAAO,SAASC,sBAAT,CAAgCC,IAAhC,EAAsCJ,MAAtC,EAA8C;AACpD,MAAIE,aAAaF,SAASA,MAAT,GAAkB,YAAnC;AACA,SAAOH,OAAOO,IAAP,EAAaF,UAAb,EAAyBG,IAAzB,EAAP;AACA;AAED;;;;AAGA,OAAO,SAASC,YAAT,CAAsBC,GAAtB,EAA2BC,MAA3B,EAAmCC,MAAnC,EAA2C;AACjD,MAAID,UAAU,IAAd,EAAoB;AACnBA,aAAS,GAAT;AACA;;AACD,MAAIC,UAAU,IAAd,EAAoB;AACnBA,aAAS,KAAT;AACA;;AACD,MAAIF,IAAIC,MAAJ,GAAaA,MAAjB,EAAyB;AACxB,WAAOD,IAAIG,SAAJ,CAAc,CAAd,EAAiBF,SAASC,OAAOD,MAAjC,IAA2CC,MAAlD;AACA,GAFD,MAEO;AACN,WAAOF,GAAP;AACA;AACD;AAED;;;;AAGA,OAAO,SAASI,SAAT,CAAmBC,GAAnB,EAAwBC,KAAxB,EAA+B;AACrC,MAAIC,CAAJ;;AACA,MAAI,2BAA2BC,IAA3B,CAAgCH,GAAhC,CAAJ,EAA0C;AACzCE,QAAIF,IAAIF,SAAJ,CAAc,CAAd,EAAiBM,KAAjB,CAAuB,EAAvB,CAAJ;;AACA,QAAIF,EAAEN,MAAF,KAAa,CAAjB,EAAoB;AACnBM,UAAI,CAACA,EAAE,CAAF,CAAD,EAAOA,EAAE,CAAF,CAAP,EAAaA,EAAE,CAAF,CAAb,EAAmBA,EAAE,CAAF,CAAnB,EAAyBA,EAAE,CAAF,CAAzB,EAA+BA,EAAE,CAAF,CAA/B,CAAJ;AACA;;AACDA,QAAI,OAAOA,EAAEG,IAAF,CAAO,EAAP,CAAX;AACA,WAAO,UAAU,CAAEH,KAAK,EAAN,GAAY,GAAb,EAAmBA,KAAK,CAAN,GAAW,GAA7B,EAAkCA,IAAI,GAAtC,EAA2CG,IAA3C,CAAgD,GAAhD,CAAV,GAAiE,GAAjE,GAAuEJ,KAAvE,GAA+E,GAAtF;AACA;;AACD,QAAM,IAAIK,KAAJ,CAAU,SAAV,CAAN;AACA;AAED;;;;AAGA,OAAO,SAASC,mBAAT,CAA6BC,MAA7B,EAAqC;AAC3C,MAAIC,WAAWD,OAAOE,OAAP,CAAeC,OAAf,CAAuBC,QAAtC;AACA,MAAIC,OAAOJ,SAASL,KAAT,CAAe,GAAf,CAAX;AACA,SAAOS,KAAK,CAAL,CAAP;AACA","sourceRoot":"/Users/admin/Desktop/template-vue","sourcesContent":["/**\n * Helpers Functions\n */\nimport moment from 'moment';\n\n// Get Date\nexport function getTheDate(timestamp, format) {\n\tlet time = timestamp * 1000;\n\tlet formatDate = format ? format : 'MM-DD-YYYY';\n\treturn moment(time).format(formatDate);\n}\n\n// Convert Date To Timestamp\nexport function convertDateToTimeStamp(date, format) {\n\tlet formatDate = format ? format : 'YYYY-MM-DD';\n\treturn moment(date, formatDate).unix();\n}\n\n/**\n * Text Truncate\n */\nexport function textTruncate(str, length, ending) {\n\tif (length == null) {\n\t\tlength = 100;\n\t}\n\tif (ending == null) {\n\t\tending = '...';\n\t}\n\tif (str.length > length) {\n\t\treturn str.substring(0, length - ending.length) + ending;\n\t} else {\n\t\treturn str;\n\t}\n}\n\n/**\n * Function to convert hex to rgba\n */\nexport function hexToRgbA(hex, alpha) {\n\tvar c;\n\tif (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\n\t\tc = hex.substring(1).split('');\n\t\tif (c.length === 3) {\n\t\t\tc = [c[0], c[0], c[1], c[1], c[2], c[2]];\n\t\t}\n\t\tc = '0x' + c.join('');\n\t\treturn 'rgba(' + [(c >> 16) & 255, (c >> 8) & 255, c & 255].join(',') + ',' + alpha + ')';\n\t}\n\tthrow new Error('Bad Hex');\n}\n\n/**\n * Function to return currenr app layout\n */\nexport function getCurrentAppLayout(router) {\n\tlet location = router.history.current.fullPath;\n\tlet path = location.split(\"/\")\n\treturn path[1];\n}"]}]}